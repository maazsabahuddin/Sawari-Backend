# Generated by Django 2.1.13 on 2019-10-08 08:06

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Captain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_owner', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_total', models.IntegerField()),
                ('payment_status', models.BooleanField()),
                ('payment_created_date', models.DateField(auto_now_add=True)),
                ('payment_due_date', models.DateField()),
                ('payment_updated_date', models.DateTimeField(blank=True, null=True)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Verify.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method', models.CharField(max_length=50, unique=True)),
                ('service_fee', models.CharField(max_length=4)),
            ],
        ),
        migrations.CreateModel(
            name='Pricing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price_per_km', models.CharField(max_length=5)),
                ('updated_timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reservation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reservation_seats', models.IntegerField()),
                ('is_confirmed', models.BooleanField(default=False)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Verify.Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Ride',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('route', models.CharField(max_length=256)),
                ('seats_left', models.IntegerField()),
                ('driver_ids', models.ManyToManyField(to='Verify.Captain')),
            ],
        ),
        migrations.CreateModel(
            name='UserRideDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kilometer', models.IntegerField()),
                ('price_per_km', models.CharField(max_length=5)),
                ('payment_status', models.BooleanField(default=False)),
                ('total_payment', models.IntegerField()),
                ('pick_up_point', models.CharField(blank=True, max_length=256)),
                ('drop_up_point', models.CharField(blank=True, max_length=256)),
                ('ride_date', models.DateField(auto_now_add=True)),
                ('payment_method_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Verify.PaymentMethod')),
                ('reservation_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Verify.Reservation')),
                ('ride_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Verify.Ride')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_no_plate', models.CharField(max_length=10)),
                ('brand', models.CharField(blank=True, max_length=20)),
                ('max_seats', models.IntegerField()),
                ('from_loc', models.CharField(default='K', max_length=255)),
                ('to_loc', models.CharField(default='L', max_length=255)),
                ('driver_ids', models.ManyToManyField(blank=True, related_name='drivers', to='Verify.Captain')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Verify.Captain')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(blank=True, max_length=60, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='email address')),
                ('email_otp', models.CharField(blank=True, default=None, max_length=8, null=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='userridedetails',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ride',
            name='vehicle_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_vehicle', to='Verify.Vehicle'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='ride_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Verify.Ride'),
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_method_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Verify.PaymentMethod'),
        ),
        migrations.AddField(
            model_name='payment',
            name='reservation_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Verify.Reservation'),
        ),
        migrations.AddField(
            model_name='payment',
            name='user_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='captain',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='captain_id', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='captain',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_id', to=settings.AUTH_USER_MODEL),
        ),
    ]
